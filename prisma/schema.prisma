generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL_NON_POOLING")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                              Int             @id @default(autoincrement())
  email                           String          @unique
  password                        String
  role                            Role            @default(USER)
  days                            String[]
  experience                      String          @default("")
  gender                          String          @default("")
  instagram                       String          @default("")
  linkedIn                        String          @default("")
  phone                           String?
  twitter                         String          @default("")
  types                           String[]
  username                        String          @default("guest")
  schedules                       ScheduleEntry[]
  UserFriends_UserFriends_AToUser UserFriends[]   @relation("UserFriends_AToUser")
  UserFriends_UserFriends_BToUser UserFriends[]   @relation("UserFriends_BToUser")
}

model ScheduleEntry {
  id        String   @id @default(uuid())
  userId    Int
  date      DateTime
  exercise  String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@index([date])
  @@index([userId])
}

model Stuff {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Int
  condition Condition @default(good)
  owner     String
}

model UserFriends {
  A                        Int
  B                        Int
  User_UserFriends_AToUser User @relation("UserFriends_AToUser", fields: [A], references: [id], onDelete: Cascade)
  User_UserFriends_BToUser User @relation("UserFriends_BToUser", fields: [B], references: [id], onDelete: Cascade)

  @@id([A, B], map: "_UserFriends_AB_pkey")
  @@index([B], map: "_UserFriends_B_index")
  @@map("_UserFriends")
}

enum Role {
  USER
  ADMIN
}

enum Condition {
  excellent
  good
  fair
  poor
}
